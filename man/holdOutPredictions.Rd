% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/holdOutPredictions.R
\name{holdOutPredictions}
\alias{holdOutPredictions}
\title{Extract the held out predictions of a \code{\link{trainOcc}} object. .}
\usage{
holdOutPredictions(x, modParam = NULL, modRow = NULL, modRank = NULL,
  by = NULL, partition = "all", aggregate = FALSE)
}
\arguments{
\item{x}{a \code{\link{trainOcc}} or \code{train} object.}

\item{modParam}{data frame with the parameters of the model.}

\item{modRow}{the row or index of the model in the
model-selection table.}

\item{modRank}{the rank of the model after sorting by \code{by}.
this table is located in \code{x$train$results}/\code{x$results}).}

\item{by}{a character or character vector specifying by which columns to sort.
If \code{NULL} the performance metric is taken from the \code{train} object.}

\item{partition}{The default 'all' is to return all held out samples of the particular model, but a particular partition can be specified by its name (one of the sorted unique values in \code{x$train$pred}), or an integer (giving the index in the unique values in \code{x$train$pred}).}

\item{aggregate}{default \code{FALSE}...}
}
\value{
held-out predicted decision values in a list with the elemetns $pos (positive held out predictions) and $un (unlabeled held out predictions). $pos and $un can be lists again depending on the resampling methods.
}
\description{
If both modParam, and modRow are \code{NULL} the held-out predictions of the
final model is returned.
}
\examples{
data(bananas)
oc <- trainOcc(x = bananas$tr[, -1], y = bananas$tr[, 1],
               tuneGrid=expand.grid(sigma=c(.1, 1, 10),
                                     cNeg=0.0625,
                                     cMultiplier=64))
### hold-out predictions of the selected model
hop <- holdOutPredictions(oc)
### extract the hold-out samples of a model corresponding to
### a aspecific row of the results table, returned when
### printing a \\'trainOcc\\' object.
hop <- holdOutPredictions(oc, modRow=3)
### extract the hold-out predictions of a partition
hop <- holdOutPredictions(oc, partition=3)
}

